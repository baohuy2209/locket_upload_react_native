#!/bin/bash
set -e  # D·ª´ng ngay n·∫øu c√≥ l·ªói

trap "echo 'Qu√° tr√¨nh build b·ªã h·ªßy. D·ª´ng t·∫•t c·∫£.'; exit 1" SIGINT

version=$(node -p "require('./package.json').version")
current_time=$(date +%Y%m%d_%H%M)

# T√¨m commit g·∫ßn nh·∫•t c√≥ message build APK
previous_commit=$(git log --grep="Build and release APK version" --pretty=format:"%H" -1)
previous_message=$(git log -1 --format=%s "$previous_commit")

# L·∫•y version t·ª´ message commit tr∆∞·ªõc
previous_version=$(echo "$previous_message" | grep -oE "[0-9]+\.[0-9]+\.[0-9]+")

# N·∫øu version ƒë√≥ tr√πng v·ªõi version hi·ªán t·∫°i => b·ªè qua commit ƒë√≥, l·∫•y commit c≈© h∆°n
if [[ "$previous_version" == "$version" ]]; then
  previous_commit=$(git log --grep="Build and release APK version" --pretty=format:"%H" --skip=1 -1)
fi

# L·∫•y changelog n·∫øu c√≥ commit tr∆∞·ªõc ƒë·ªÉ so s√°nh
changelog=""
if [[ -n "$previous_commit" ]]; then
  changelog=$(git log --pretty=format:"- %s" "${previous_commit}..HEAD" --no-merges \
    | grep -v "Build and release APK version" \
    | grep -v -i "script deploy" \
    | grep -v -i "update readme" \
    | grep -v -i "update script"
  )
fi

# Build APKs cho t·∫•t c·∫£ ki·∫øn tr√∫c
cd android
./gradlew assembleRelease || { echo "L·ªói: Build APK th·∫•t b·∫°i!"; exit 1; }
cd ..

# L·∫•y danh s√°ch ABI
abis=("arm64-v8a" "armeabi-v7a" "x86" "x86_64" "universal")

# C√†i APK v√†o thi·∫øt b·ªã n·∫øu ki·∫øn tr√∫c kh·ªõp
device_abi=$(adb shell getprop ro.product.cpu.abi | tr -d '\r')

apk_paths=()
for abi in "${abis[@]}"; do
  input_path="android/app/build/outputs/apk/release/app-${abi}-release.apk"
  if [[ -f "$input_path" ]]; then
    output_path="android/app/build/outputs/apk/release/locket_upload_${current_time}_${abi}.apk"
    mv "$input_path" "$output_path"
    apk_paths+=("$output_path")

    if [[ "$abi" == "$device_abi" ]]; then
      echo "üì± Installing: $output_path"
      adb install -r "$output_path" || echo "C·∫£nh b√°o: C√†i ƒë·∫∑t APK th·∫•t b·∫°i!"
    fi
  fi
done

# Git commit & push n·∫øu c√≥ thay ƒë·ªïi
if ! git diff --cached --quiet || ! git diff --quiet; then
  git add .
  git commit -m "Build and release APK version ${version} on ${current_time}" || { echo "L·ªói: Commit Git th·∫•t b·∫°i!"; exit 1; }
  git push origin main || { echo "L·ªói: Push Git th·∫•t b·∫°i!"; exit 1; }
else
  echo "Kh√¥ng c√≥ thay ƒë·ªïi n√†o ƒë·ªÉ commit. B·ªè qua b∆∞·ªõc Git."
fi

# Chu·∫©n b·ªã ghi ch√∫
release_notes="Release version ${version}
Changelog:
${changelog}"

# Ki·ªÉm tra release ƒë√£ t·ªìn t·∫°i ch∆∞a
release_id=$(gh release view "v${version}" --json id -q .id 2>/dev/null || true)

if [ -z "$release_id" ]; then
  echo "==> T·∫°o release GitHub m·ªõi..."
  gh release create "v${version}" "${apk_paths[@]}" --notes "$release_notes" || {
    echo "L·ªói: T·∫°o release GitHub th·∫•t b·∫°i!"
    exit 1
  }
else
  echo "==> Release ƒë√£ t·ªìn t·∫°i. Ch·ªâ upload l·∫°i APK n·∫øu c·∫ßn."
  # Upload APK v·ªõi --clobber ƒë·ªÉ ghi ƒë√® n·∫øu tr√πng t√™n file
  gh release upload "v${version}" "${apk_paths[@]}" --clobber || {
    echo "L·ªói: Upload file APK th·∫•t b·∫°i!"
    exit 1
  }
fi

# G·ª≠i FCM n·∫øu ng∆∞·ªùi d√πng ƒë·ªìng √Ω
read -p "B·∫°n c√≥ mu·ªën g·ª≠i th√¥ng b√°o qua FCM kh√¥ng? (y/n): " send_fcm

if [[ "$send_fcm" == "y" || "$send_fcm" == "Y" ]]; then
  PROJECT_ID=$(node -p "require('./google-services.json').project_info.project_id") || { echo "L·ªói: Kh√¥ng l·∫•y ƒë∆∞·ª£c PROJECT_ID!"; exit 1; }
  FCM_URL="https://fcm.googleapis.com/v1/projects/$PROJECT_ID/messages:send"
  ACCESS_TOKEN=$(gcloud auth application-default print-access-token) || { echo "L·ªói: L·∫•y access token th·∫•t b·∫°i!"; exit 1; }

  curl -X POST "$FCM_URL" \
       -H "Authorization: Bearer $ACCESS_TOKEN" \
       -H "Content-Type: application/json" \
       -d '{
   "message": {
    "android": {
      "restricted_package_name": "com.locket_upload",
      "ttl": "604800s"
    },
    "data": {
     "update_url": "https://github.com/quockhanh2004/locket_upload_react_native/releases"
    },
    "notification": {
     "body": "C·∫ßn c·∫≠p nh·∫≠t qua apk, nh·∫•n v√†o ƒë·ªÉ ki·ªÉm tra nh√©!",
     "title": "ƒê√£ c√≥ b·∫£n c·∫≠p nh·∫≠t m·ªõi!"
    },
    "topic": "new_update"
   }
  }' || { echo "L·ªói: G·ª≠i th√¥ng b√°o FCM th·∫•t b·∫°i!"; exit 1; }

  echo "üì¢ ƒê√£ g·ª≠i th√¥ng b√°o FCM th√†nh c√¥ng!"
else
  echo "üö´ B·ªè qua vi·ªác g·ª≠i th√¥ng b√°o FCM."
fi

echo "üéâ Build ho√†n t·∫•t th√†nh c√¥ng!"